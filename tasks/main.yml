---
# We want to download on Controler host
- name: Download process_exporter binary
  get_url:
    url: "https://github.com/ncabatoff/process-exporter/releases/download/v{{ process_exporter_version }}/process-exporter-{{ process_exporter_version }}.linux-amd64.tar.gz"
    dest: "/tmp/process-exporter-{{ process_exporter_version }}.linux-amd64.tar.gz"
  delegate_to: localhost

- name: Unpack process_exporter binary
  unarchive:
    src: "/tmp/process-exporter-{{ process_exporter_version }}.linux-amd64.tar.gz"
    dest: "/tmp"
    creates: "/tmp/process-exporter-{{ process_exporter_version }}.linux-amd64/process_exporter"
  delegate_to: localhost

- name: Propagate process_exporter binary
  copy:
    src: "/tmp/process-exporter-{{ process_exporter_version }}.linux-amd64/process-exporter"
    dest: "{{process_exporter_config_dir}}/process_exporter"
    mode: 0750

- name: Configure process_exporter
  template:
    src: process_exporter.yml.j2
    dest: "{{ process_exporter_config_file }}"
    mode: 0644

- name: Copy the Process Exporter systemd service file
  template:
    src: process_exporter.service.j2
    dest: /etc/systemd/system/process_exporter.service
    owner: root
    group: root
    mode: 0644
  notify: restart process_exporter

- name: "Start & enable Process Exporter"
  systemd:
    name: process_exporter
    state: started
    enabled: true
    daemon_reload: true
  when: ansible_service_mgr == "systemd"

- name: Copy the Process Exporter init.d start script
  template:
    src: process_exporter.init.d.j2
    dest: /etc/init.d/process_exporter
    owner: root
    group: root
    mode: 0644
  notify: restart process_exporter
  when: ansible_service_mgr == "init"

- name: make sure process_exporter is started
  service:
    # must support all  init systems including SysV and systemd
      name: process_exporter
      state: started
      enabled: yes
